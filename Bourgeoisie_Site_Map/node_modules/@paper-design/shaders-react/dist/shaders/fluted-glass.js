/* * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *                    Paper Shaders                    *
 *       https://github.com/paper-design/shaders       *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */

import { memo } from "react";
import { ShaderMount } from "../shader-mount.js";
import {
  flutedGlassFragmentShader,
  ShaderFitOptions,
  defaultObjectSizing,
  GlassDistortionShapes,
  GlassGridShapes
} from "@paper-design/shaders";
import { jsx } from "react/jsx-runtime";
const defaultPreset = {
  name: "Default",
  params: {
    ...defaultObjectSizing,
    fit: "cover",
    speed: 0,
    frame: 0,
    size: 0.15,
    angle: 0,
    distortionShape: "lens",
    shape: "lines",
    distortion: 0.5,
    shift: 0,
    blur: 3,
    edges: 0,
    margin: 0,
    marginLeft: 0,
    marginRight: 0,
    marginTop: 0,
    marginBottom: 0
  }
};
const wavesPreset = {
  name: "Waves",
  params: {
    ...defaultObjectSizing,
    fit: "cover",
    speed: 0,
    frame: 0,
    size: 0.3,
    angle: 0,
    distortionShape: "contour",
    shape: "wave",
    distortion: 0.3,
    shift: 0,
    blur: 0,
    edges: 0,
    margin: 0,
    marginLeft: 0,
    marginRight: 0,
    marginTop: 0,
    marginBottom: 0
  }
};
const irregularPreset = {
  name: "Irregular lines",
  params: {
    ...defaultObjectSizing,
    fit: "cover",
    scale: 4,
    speed: 0,
    frame: 0,
    size: 0.3,
    angle: 150,
    distortionShape: "facete",
    shape: "linesIrregular",
    distortion: 1,
    shift: 0,
    blur: 25,
    edges: 1,
    margin: 0,
    marginLeft: 0,
    marginRight: 0,
    marginTop: 0,
    marginBottom: 0
  }
};
const foldsPreset = {
  name: "Folds",
  params: {
    ...defaultObjectSizing,
    fit: "cover",
    speed: 0,
    frame: 0,
    size: 0.25,
    angle: 0,
    distortionShape: "cascade",
    shape: "lines",
    distortion: 0.75,
    shift: 0,
    blur: 0,
    edges: 0,
    margin: 0.2,
    marginLeft: 0.2,
    marginRight: 0.2,
    marginTop: 0.2,
    marginBottom: 0.2
  }
};
const flutedGlassPresets = [defaultPreset, irregularPreset, wavesPreset, foldsPreset];
const FlutedGlass = memo(function FlutedGlassImpl({
  // Own props
  speed = defaultPreset.params.speed,
  frame = defaultPreset.params.frame,
  image = "",
  angle = defaultPreset.params.angle,
  distortion = defaultPreset.params.distortion,
  distortionShape = defaultPreset.params.distortionShape,
  shape = defaultPreset.params.shape,
  shift = defaultPreset.params.shift,
  blur = defaultPreset.params.blur,
  margin,
  marginLeft = margin ?? defaultPreset.params.marginLeft,
  marginRight = margin ?? defaultPreset.params.marginRight,
  marginTop = margin ?? defaultPreset.params.marginTop,
  marginBottom = margin ?? defaultPreset.params.marginBottom,
  edges = defaultPreset.params.edges,
  // integer `count` was deprecated in favor of the normalized `size` param
  count,
  size = count === void 0 ? defaultPreset.params.size : Math.pow(1 / (count * 1.6), 1 / 6) / 0.7 - 0.5,
  // Sizing props
  fit = defaultPreset.params.fit,
  scale = defaultPreset.params.scale,
  rotation = defaultPreset.params.rotation,
  originX = defaultPreset.params.originX,
  originY = defaultPreset.params.originY,
  offsetX = defaultPreset.params.offsetX,
  offsetY = defaultPreset.params.offsetY,
  worldWidth = defaultPreset.params.worldWidth,
  worldHeight = defaultPreset.params.worldHeight,
  ...props
}) {
  const uniforms = {
    // Own uniforms
    u_image: image,
    u_size: size,
    u_angle: angle,
    u_distortion: distortion,
    u_shift: shift,
    u_blur: blur,
    u_edges: edges,
    u_distortionShape: GlassDistortionShapes[distortionShape],
    u_shape: GlassGridShapes[shape],
    u_marginLeft: marginLeft,
    u_marginRight: marginRight,
    u_marginTop: marginTop,
    u_marginBottom: marginBottom,
    // Sizing uniforms
    u_fit: ShaderFitOptions[fit],
    u_scale: scale,
    u_rotation: rotation,
    u_offsetX: offsetX,
    u_offsetY: offsetY,
    u_originX: originX,
    u_originY: originY,
    u_worldWidth: worldWidth,
    u_worldHeight: worldHeight
  };
  return /* @__PURE__ */ jsx(
    ShaderMount,
    {
      ...props,
      speed,
      frame,
      fragmentShader: flutedGlassFragmentShader,
      uniforms
    }
  );
});
export {
  FlutedGlass,
  defaultPreset,
  flutedGlassPresets,
  foldsPreset,
  irregularPreset,
  wavesPreset
};
//# sourceMappingURL=fluted-glass.js.map
