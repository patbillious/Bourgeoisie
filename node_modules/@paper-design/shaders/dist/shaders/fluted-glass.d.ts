import type { ShaderMotionParams } from '../shader-mount.js';
import { type ShaderSizingParams, type ShaderSizingUniforms } from '../shader-sizing.js';
/**
 * Mimicking glass surface distortion over the image by distorting the texture
 * coordinates within line patterns
 *
 * Uniforms:
 * - u_size, u_angle - size and direction of grid relative to the image
 * - u_shape (float used as integer):
 * ---- 1: uniformly spaced stripes
 * ---- 2: randomly spaced stripes
 * ---- 3: sine wave stripes
 * ---- 4: zigzag stripes
 * ---- 5: wave-based pattern
 * - u_distortion - the power of distortion applied along within each stripe
 * - u_distortionShape (float used as integer):
 * ---- 5 shapes available
 * - u_shift - texture shift in direction opposite to the grid
 * - u_blur - one-directional blur applied over the main distortion
 * - u_edges - thin color lines along the grid (independent from distortion)
 * - u_marginLeft, u_marginRight, u_marginTop, u_marginBottom - paddings
 *   within picture to be shown without any distortion
 *
 */
export declare const flutedGlassFragmentShader: string;
export interface FlutedGlassUniforms extends ShaderSizingUniforms {
    u_image: HTMLImageElement | string;
    u_size: number;
    u_angle: number;
    u_distortion: number;
    u_shift: number;
    u_blur: number;
    u_marginLeft: number;
    u_marginRight: number;
    u_marginTop: number;
    u_marginBottom: number;
    u_edges: number;
    u_distortionShape: (typeof GlassDistortionShapes)[GlassDistortionShape];
    u_shape: (typeof GlassGridShapes)[GlassGridShape];
    u_noiseTexture?: HTMLImageElement;
}
export interface FlutedGlassParams extends ShaderSizingParams, ShaderMotionParams {
    image: HTMLImageElement | string;
    size?: number;
    angle?: number;
    distortion?: number;
    shift?: number;
    blur?: number;
    margin?: number;
    marginLeft?: number;
    marginRight?: number;
    marginTop?: number;
    marginBottom?: number;
    edges?: number;
    distortionShape?: GlassDistortionShape;
    shape?: GlassGridShape;
}
export declare const GlassGridShapes: {
    readonly lines: 1;
    readonly linesIrregular: 2;
    readonly wave: 3;
    readonly zigzag: 4;
    readonly pattern: 5;
};
export declare const GlassDistortionShapes: {
    readonly prism: 1;
    readonly lens: 2;
    readonly contour: 3;
    readonly cascade: 4;
    readonly facete: 5;
};
export type GlassDistortionShape = keyof typeof GlassDistortionShapes;
export type GlassGridShape = keyof typeof GlassGridShapes;
